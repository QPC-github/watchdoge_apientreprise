---
http_interactions:
- request:
    method: get
    uri: "<APIE_BASE_URI_OLD>/v1/attestations_fiscales/552032534?context=Ping&recipient=SGMAP&siren_is=552032534&siren_tva=552032534&token=<APIE_TOKEN>"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"6768df043ede7deb356a6efc8b9125b5"
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Runtime:
      - '5.853607'
      X-Request-Id:
      - b4e29128-e7cd-41a8-897f-07fb7d48c85c
      Date:
      - Tue, 31 Oct 2017 17:18:53 GMT
      X-Powered-By:
      - Phusion Passenger 5.1.8
      Server:
      - nginx + Phusion Passenger 5.1.8
    body:
      encoding: ASCII-8BIT
      string: '{"url":"https://storage.apientreprise.fr/siade/attestation%2Dbd3201947ec5b3f12f193c58e2db2b2f.pdf"}'
    http_version: 
  recorded_at: Tue, 31 Oct 2017 17:18:53 GMT
- request:
    method: get
    uri: "<APIE_BASE_URI_OLD>/v1/cnetp/certificat/632049128?context=Ping&recipient=SGMAP&token=<APIE_TOKEN>"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"7b7e4741e9dad2b031a5e047378f203f"
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Runtime:
      - '1.147627'
      X-Request-Id:
      - 88d7b5ae-4308-436c-b5f8-654198c4945b
      Date:
      - Tue, 31 Oct 2017 17:18:54 GMT
      X-Powered-By:
      - Phusion Passenger 5.1.8
      Server:
      - nginx + Phusion Passenger 5.1.8
    body:
      encoding: ASCII-8BIT
      string: '{"url":"https://storage.apientreprise.fr/siade/attestation%2D1334cf602c4e5cf546aad5bbc419c1ef_cnetp.pdf"}'
    http_version: 
  recorded_at: Tue, 31 Oct 2017 17:18:54 GMT
- request:
    method: get
    uri: "<APIE_BASE_URI_OLD>/v1/entreprises/418166096?context=Ping&recipient=SGMAP&token=<APIE_TOKEN>"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"7b6cd001430b6e063aaeb0bbf3846622"
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Runtime:
      - '1.102986'
      X-Request-Id:
      - 95d8ca9d-2ff8-40a2-bac9-1349ac7d43ff
      Date:
      - Tue, 31 Oct 2017 17:18:55 GMT
      X-Powered-By:
      - Phusion Passenger 5.1.8
      Server:
      - nginx + Phusion Passenger 5.1.8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJlbnRyZXByaXNlIjp7InNpcmVuIjoiNDE4MTY2MDk2IiwiY2FwaXRhbF9zb2NpYWwiOjUwOTUyNSwibnVtZXJvX3R2YV9pbnRyYWNvbW11bmF1dGFpcmUiOiJGUjE2NDE4MTY2MDk2IiwiZm9ybWVfanVyaWRpcXVlIjoiU0Egw6AgZGlyZWN0b2lyZSAocy5hLmkuKSIsImZvcm1lX2p1cmlkaXF1ZV9jb2RlIjoiNTY5OSIsIm5vbWJyZV9ldGFibGlzc2VtZW50c19hY3RpZnMiOjEsIm5vbV9jb21tZXJjaWFsIjoiT0NUTy1URUNITk9MT0dZIiwicHJvY2VkdXJlX2NvbGxlY3RpdmUiOmZhbHNlLCJyYWlzb25fc29jaWFsZSI6Ik9DVE8tVEVDSE5PTE9HWSIsInNpcmV0X3NpZWdlX3NvY2lhbCI6IjQxODE2NjA5NjAwMDY5IiwiY29kZV9lZmZlY3RpZl9lbnRyZXByaXNlIjoiMzIiLCJkYXRlX2NyZWF0aW9uIjo4OTEzODE2MDAsIm5vbSI6bnVsbCwicHJlbm9tIjpudWxsLCJldGF0X2FkbWluaXN0cmF0aWYiOnsidmFsdWUiOiJBY3RpZiIsImRhdGVfbWlzZV9hX2pvdXIiOjg5MTM4MTYwMH0sImRhdGVfcmFkaWF0aW9uIjpudWxsLCJtYW5kYXRhaXJlc19zb2NpYXV4IjpbeyJub20iOiJISVNRVUlOIiwicHJlbm9tIjoiRlJBTkNPSVMiLCJmb25jdGlvbiI6IlBSRVNJREVOVCBEVSBESVJFQ1RPSVJFIiwiZGF0ZV9uYWlzc2FuY2UiOiIxOTY1LTAxLTI3IiwiZGF0ZV9uYWlzc2FuY2VfdGltZXN0YW1wIjotMTU1NTIzNjAwLCJkaXJpZ2VhbnQiOnRydWUsInJhaXNvbl9zb2NpYWxlIjoiIiwiaWRlbnRpZmlhbnQiOiIiLCJ0eXBlIjoiUFAifSx7Im5vbSI6Ik5JQk9VUkVMIiwicHJlbm9tIjoiQ0hSSVNUSUFOIiwiZm9uY3Rpb24iOiJQUkVTSURFTlQgRFUgQ09OU0VJTCBERSBTVVJWRUlMTEFOQ0UiLCJkYXRlX25haXNzYW5jZSI6IjE5NTgtMDEtMDkiLCJkYXRlX25haXNzYW5jZV90aW1lc3RhbXAiOi0zNzgwMDM2MDAsImRpcmlnZWFudCI6dHJ1ZSwicmFpc29uX3NvY2lhbGUiOiIiLCJpZGVudGlmaWFudCI6IiIsInR5cGUiOiJQUCJ9LHsibm9tIjoiREVHT05TRSIsInByZW5vbSI6IkdFUkFSRCIsImZvbmN0aW9uIjoiVklDRS1QUkVTSURFTlQiLCJkYXRlX25haXNzYW5jZSI6IjE5NDctMDctMDMiLCJkYXRlX25haXNzYW5jZV90aW1lc3RhbXAiOi03MTAwMzg4MDAsImRpcmlnZWFudCI6dHJ1ZSwicmFpc29uX3NvY2lhbGUiOiIiLCJpZGVudGlmaWFudCI6IiIsInR5cGUiOiJQUCJ9LHsibm9tIjoiQ0lOUVVJTiIsInByZW5vbSI6IkxVRE9WSUMiLCJmb25jdGlvbiI6Ik1FTUJSRSBEVSBESVJFQ1RPSVJFIiwiZGF0ZV9uYWlzc2FuY2UiOiIxOTcyLTAxLTI1IiwiZGF0ZV9uYWlzc2FuY2VfdGltZXN0YW1wIjo2NTE0MjAwMCwiZGlyaWdlYW50Ijp0cnVlLCJyYWlzb25fc29jaWFsZSI6IiIsImlkZW50aWZpYW50IjoiIiwidHlwZSI6IlBQIn0seyJub20iOiJERUdPTlNFIiwicHJlbm9tIjoiR0VSQVJEIiwiZm9uY3Rpb24iOiJNRU1CUkUgRFUgQ09OU0VJTCBERSBTVVJWRUlMTEFOQ0UiLCJkYXRlX25haXNzYW5jZSI6IjE5NDctMDctMDMiLCJkYXRlX25haXNzYW5jZV90aW1lc3RhbXAiOi03MTAwMzg4MDAsImRpcmlnZWFudCI6dHJ1ZSwicmFpc29uX3NvY2lhbGUiOiIiLCJpZGVudGlmaWFudCI6IiIsInR5cGUiOiJQUCJ9LHsibm9tIjoiQkVOIE1BSE1PVUQiLCJwcmVub20iOiJTSUhFTSIsImZvbmN0aW9uIjoiTUVNQlJFIERVIENPTlNFSUwgREUgU1VSVkVJTExBTkNFIiwiZGF0ZV9uYWlzc2FuY2UiOiIxOTY3LTAzLTEzIiwiZGF0ZV9uYWlzc2FuY2VfdGltZXN0YW1wIjotODg1NjM2MDAsImRpcmlnZWFudCI6dHJ1ZSwicmFpc29uX3NvY2lhbGUiOiIiLCJpZGVudGlmaWFudCI6IiIsInR5cGUiOiJQUCJ9LHsibm9tIjoiQk9LT0JaQSIsInByZW5vbSI6IkpFQU4tUElFUlJFIiwiZm9uY3Rpb24iOiJNRU1CUkUgRFUgQ09OU0VJTCBERSBTVVJWRUlMTEFOQ0UiLCJkYXRlX25haXNzYW5jZSI6IjE5NjEtMDQtMjQiLCJkYXRlX25haXNzYW5jZV90aW1lc3RhbXAiOi0yNzQyMzcyMDAsImRpcmlnZWFudCI6dHJ1ZSwicmFpc29uX3NvY2lhbGUiOiIiLCJpZGVudGlmaWFudCI6IiIsInR5cGUiOiJQUCJ9LHsibm9tIjoiQ0FNUEJFTEwiLCJwcmVub20iOiJBTExBTiIsImZvbmN0aW9uIjoiTUVNQlJFIERVIENPTlNFSUwgREUgU1VSVkVJTExBTkNFIiwiZGF0ZV9uYWlzc2FuY2UiOiIxOTYxLTAzLTMxIiwiZGF0ZV9uYWlzc2FuY2VfdGltZXN0YW1wIjotMjc2MzEwODAwLCJkaXJpZ2VhbnQiOnRydWUsInJhaXNvbl9zb2NpYWxlIjoiIiwiaWRlbnRpZmlhbnQiOiIiLCJ0eXBlIjoiUFAifSx7Im5vbSI6IkRFTE9STUUiLCJwcmVub20iOiJQQVNDQUwiLCJmb25jdGlvbiI6Ik1FTUJSRSBEVSBESVJFQ1RPSVJFIiwiZGF0ZV9uYWlzc2FuY2UiOiIxOTYyLTEyLTMwIiwiZGF0ZV9uYWlzc2FuY2VfdGltZXN0YW1wIjotMjIxMTAxMjAwLCJkaXJpZ2VhbnQiOnRydWUsInJhaXNvbl9zb2NpYWxlIjoiIiwiaWRlbnRpZmlhbnQiOiIiLCJ0eXBlIjoiUFAifSx7Im5vbSI6IkRPTk5BWSIsInByZW5vbSI6IkxBVVJFTlQiLCJmb25jdGlvbiI6Ik1FTUJSRSBEVSBESVJFQ1RPSVJFIiwiZGF0ZV9uYWlzc2FuY2UiOiIxOTcyLTEwLTI1IiwiZGF0ZV9uYWlzc2FuY2VfdGltZXN0YW1wIjo4ODgxNTYwMCwiZGlyaWdlYW50Ijp0cnVlLCJyYWlzb25fc29jaWFsZSI6IiIsImlkZW50aWZpYW50IjoiIiwidHlwZSI6IlBQIn0seyJub20iOiIiLCJwcmVub20iOiIiLCJmb25jdGlvbiI6IkNPTU1JU1NBSVJFIEFVWCBDT01QVEVTIFRJVFVMQUlSRSIsImRhdGVfbmFpc3NhbmNlIjoiIiwiZGF0ZV9uYWlzc2FuY2VfdGltZXN0YW1wIjowLCJkaXJpZ2VhbnQiOnRydWUsInJhaXNvbl9zb2NpYWxlIjoiTUFaQVJTIC0gU09DSUVURSBBTk9OWU1FIiwiaWRlbnRpZmlhbnQiOiI3ODQ4MjQxNTMiLCJ0eXBlIjoiUE0ifSx7Im5vbSI6IiIsInByZW5vbSI6IiIsImZvbmN0aW9uIjoiQ09NTUlTU0FJUkUgQVVYIENPTVBURVMgVElUVUxBSVJFIiwiZGF0ZV9uYWlzc2FuY2UiOiIiLCJkYXRlX25haXNzYW5jZV90aW1lc3RhbXAiOjAsImRpcmlnZWFudCI6dHJ1ZSwicmFpc29uX3NvY2lhbGUiOiJLUE1HIC0gU09DSUVURSBBTk9OWU1FIiwiaWRlbnRpZmlhbnQiOiIiLCJ0eXBlIjoiUE0ifSx7Im5vbSI6IiIsInByZW5vbSI6IiIsImZvbmN0aW9uIjoiQ09NTUlTU0FJUkUgQVVYIENPTVBURVMgU1VQUExFQU5UIiwiZGF0ZV9uYWlzc2FuY2UiOiIiLCJkYXRlX25haXNzYW5jZV90aW1lc3RhbXAiOjAsImRpcmlnZWFudCI6dHJ1ZSwicmFpc29uX3NvY2lhbGUiOiJCQ1JIIFx1MDAyNiBBU1NPQ0lFUyAtIFNPQ0lFVEUgQSBSRVNQT05TQUJJTElURSBMSU1JVEVFIiwiaWRlbnRpZmlhbnQiOiI0OTAwOTI1NzQiLCJ0eXBlIjoiUE0ifSx7Im5vbSI6IlNJTU9OIiwicHJlbm9tIjoiSkVBTi1MT1VJUyIsImZvbmN0aW9uIjoiQ09NTUlTU0FJUkUgQVVYIENPTVBURVMgU1VQUExFQU5UIiwiZGF0ZV9uYWlzc2FuY2UiOiIxOTU5LTAyLTE3IiwiZGF0ZV9uYWlzc2FuY2VfdGltZXN0YW1wIjotMzQzMDk4MDAwLCJkaXJpZ2VhbnQiOnRydWUsInJhaXNvbl9zb2NpYWxlIjoiIiwiaWRlbnRpZmlhbnQiOiIiLCJ0eXBlIjoiUFAifV19LCJnYXRld2F5X2Vycm9yIjpmYWxzZX0=
    http_version: 
  recorded_at: Tue, 31 Oct 2017 17:18:55 GMT
- request:
    method: get
    uri: "<APIE_BASE_URI_OLD>/v1/probtp/attestations_cotisation_retraite/73582032600040?context=Ping&recipient=SGMAP&token=<APIE_TOKEN>"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"1469d9c6faf269c87671dec832742d0d"
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Runtime:
      - '1.211693'
      X-Request-Id:
      - e39b66bc-e31f-4b20-b0f9-78543beeb898
      Date:
      - Tue, 31 Oct 2017 17:18:56 GMT
      X-Powered-By:
      - Phusion Passenger 5.1.8
      Server:
      - nginx + Phusion Passenger 5.1.8
    body:
      encoding: ASCII-8BIT
      string: '{"url":"https://storage.apientreprise.fr/siade/attestation%2D67a45288491a78c3e7c4a37e425954f0_probtp_cotisation_retraite.pdf"}'
    http_version: 
  recorded_at: Tue, 31 Oct 2017 17:18:56 GMT
- request:
    method: get
    uri: "<APIE_BASE_URI_OLD>/v1/probtp/eligibilite_cotisation_retraite/73582032600040?context=Ping&recipient=SGMAP&token=<APIE_TOKEN>"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"a7dfc71d7ce21b87f5651fc29378a868"
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Runtime:
      - '0.244778'
      X-Request-Id:
      - c37c4d67-307a-4469-80f3-fab3846b2148
      Date:
      - Tue, 31 Oct 2017 17:18:57 GMT
      X-Powered-By:
      - Phusion Passenger 5.1.8
      Server:
      - nginx + Phusion Passenger 5.1.8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJlbGlnaWJsZSI6dHJ1ZSwibWVzc2FnZSI6IjAwIENvbXB0ZSDDqWxpZ2libGUgcG91ciBhdHRlc3RhdGlvbiBkZSBjb3Rpc2F0aW9uIn0=
    http_version: 
  recorded_at: Tue, 31 Oct 2017 17:18:57 GMT
- request:
    method: get
    uri: "<APIE_BASE_URI_OLD>/v1/certificats_qualibat/33592022900036?context=Ping&recipient=SGMAP&token=<APIE_TOKEN>"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"c35cce2a2e8d673497eda4b834bccea8"
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Runtime:
      - '0.476882'
      X-Request-Id:
      - 425eba5a-2aa0-40c9-bd33-19945ae2d34f
      Date:
      - Tue, 31 Oct 2017 17:18:57 GMT
      X-Powered-By:
      - Phusion Passenger 5.1.8
      Server:
      - nginx + Phusion Passenger 5.1.8
    body:
      encoding: ASCII-8BIT
      string: '{"url":"https://storage.apientreprise.fr/siade/attestation%2D629ccb364c3a76882bfaa8c5bd17ac6c_qualibat.pdf"}'
    http_version: 
  recorded_at: Tue, 31 Oct 2017 17:18:57 GMT
- request:
    method: get
    uri: "<APIE_BASE_URI_OLD>/v1/associations/W604004799?context=Ping&recipient=SGMAP&token=<APIE_TOKEN>"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"3674a5473c3a06a0a27b34d498893a13"
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Runtime:
      - '0.486957'
      X-Request-Id:
      - 8677bb85-d10d-4f3b-9f9e-5c56a49ccf72
      Date:
      - Tue, 31 Oct 2017 17:18:58 GMT
      X-Powered-By:
      - Phusion Passenger 5.1.8
      Server:
      - nginx + Phusion Passenger 5.1.8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhc3NvY2lhdGlvbiI6eyJpZCI6Ilc2MDQwMDQ3OTkiLCJ0aXRyZSI6IlBPTEUgUE9TSVRJT04gOiBMQSBTRUNVUklURSBST1VUSUVSRSBFTiBQUkVNSUVSRSBMSUdORSIsIm9iamV0IjoibCfDqWR1Y2F0aW9uIGV0IGxhIGZvcm1hdGlvbiBkZXMgamV1bmVzIGVuIGNlIHF1aSBjb25jZXJuZSBsYSBjb25kdWl0ZSBhdXRvbW9iaWxlLCBsZSBjb21wb3J0ZW1lbnQgYXUgdm9sYW50IGV0IHBsdXMgZ8OpbsOpcmFsZW1lbnQgbGEgbHV0dGUgY29udHJlIGwnaW5zw6ljdXJpdMOpIHJvdXRpw6hyZSA7IGwnYXNzb2NpYXRpb24gYSBwb3VyIG9iamV0IGRlIHNlbnNpYmlsaXNlciBsYSBwb3B1bGF0aW9uIGRlcyBqZXVuZXMgZGUgMTAgw6AgMjUgYW5zIGF1IHJlc3BlY3QgZGVzIHLDqGdsZXMgw6lsw6ltZW50YWlyZXMgZGUgc8OpY3VyaXTDqSBhdSB2b2xhbnQgZXQgZGUgZmF2b3Jpc2VyIGRlcyBjb21wb3J0ZW1lbnRzIGNpdG95ZW5zIDsgbCdhc3NvY2lhdGlvbiBlbnRlbmQgdXRpbGlzZXIgbGUgc3BvcnQgYXV0b21vYmlsZSBjb21tZSB2ZWN0ZXVyIGVzc2VudGllbCBkZSBzb24gYWN0aW9uIGVuIG1hdGnDqHJlIGRlIGZvcm1hdGlvbiBldCBkZSBjb21tdW5pY2F0aW9uIiwic2lyZXQiOm51bGwsInNpcmV0X3NpZWdlX3NvY2lhbCI6bnVsbCwiZGF0ZV9jcmVhdGlvbiI6IjIwMDMtMDMtMTQiLCJkYXRlX2RlY2xhcmF0aW9uIjoiMjAxNy0wMS0zMCIsImRhdGVfcHVibGljYXRpb24iOiIyMDAzLTA1LTAzIiwiZGF0ZV9kaXNzb2x1dGlvbiI6bnVsbCwiYWRyZXNzZV9zaWVnZSI6eyJjb21wbGVtZW50IjoiICAiLCJudW1lcm9fdm9pZSI6IjExIiwidHlwZV92b2llIjoiUlVFIiwibGliZWxsZV92b2llIjoiQmFjaGF1bW9udCIsImRpc3RyaWJ1dGlvbiI6Il8iLCJjb2RlX2luc2VlIjpudWxsLCJjb2RlX3Bvc3RhbCI6Ijc1MDAyIiwiY29tbXVuZSI6IlBhcmlzIn0sImNvZGVfY2l2aWxpdGVfZGlyaWdlYW50IjpudWxsLCJjaXZpbGl0ZV9kaXJpZ2VhbnQiOm51bGwsImNvZGVfZXRhdCI6bnVsbCwiZXRhdCI6InRydWUiLCJjb2RlX2dyb3VwZW1lbnQiOm51bGwsImdyb3VwZW1lbnQiOiJTaW1wbGUiLCJtaXNlX2Ffam91ciI6IjIwMTctMDEtMzAifX0=
    http_version: 
  recorded_at: Tue, 31 Oct 2017 17:18:58 GMT
- request:
    method: get
    uri: "<APIE_BASE_URI_OLD>/v1/etablissements/41816609600069?context=Ping&recipient=SGMAP&token=<APIE_TOKEN>"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"4f554879d8ab4d1f726decf82a63e577"
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Runtime:
      - '0.335629'
      X-Request-Id:
      - 614e18f5-dbcf-426a-b40f-3d9cf5a33547
      Date:
      - Tue, 31 Oct 2017 17:18:59 GMT
      X-Powered-By:
      - Phusion Passenger 5.1.8
      Server:
      - nginx + Phusion Passenger 5.1.8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJldGFibGlzc2VtZW50Ijp7InNpZWdlX3NvY2lhbCI6dHJ1ZSwic2lyZXQiOiI0MTgxNjYwOTYwMDA2OSIsIm5hZiI6IjYyMDJBIiwibGliZWxsZV9uYWYiOiJDb25zZWlsIGVuIHN5c3TDqG1lcyBldCBsb2dpY2llbHMgaW5mb3JtYXRpcXVlcyIsImRhdGVfbWlzZV9hX2pvdXIiOjE1MDU3NzIwMDAsImV0YXRfYWRtaW5pc3RyYXRpZl9ldGFibGlzc2VtZW50Ijp7InZhbHVlIjoiQWN0aWYiLCJkYXRlX21pc2VfYV9qb3VyIjoxNDgwMjg3NjAwfSwiYWRyZXNzZSI6eyJsMSI6Ik9DVE8tVEVDSE5PTE9HWSIsImwyIjoiMzQgQVYgREUgTCBPUEVSQSIsImwzIjoiNzUwMDIgUEFSSVMgMiIsImw0IjpudWxsLCJsNSI6bnVsbCwibDYiOm51bGwsImw3IjpudWxsLCJudW1lcm9fdm9pZSI6IjM0IiwidHlwZV92b2llIjoiQVYiLCJub21fdm9pZSI6IkRFIEwgT1BFUkEiLCJjb21wbGVtZW50X2FkcmVzc2UiOm51bGwsImNvZGVfcG9zdGFsIjoiNzUwMDIiLCJsb2NhbGl0ZSI6IlBBUklTIDIiLCJjb2RlX2luc2VlX2xvY2FsaXRlIjoiNzUxMDIifX0sImdhdGV3YXlfZXJyb3IiOmZhbHNlfQ==
    http_version: 
  recorded_at: Tue, 31 Oct 2017 17:18:59 GMT
- request:
    method: get
    uri: "<APIE_BASE_URI_OLD>/v1/etablissements/exercices/55203253400646?context=Ping&recipient=SGMAP&token=<APIE_TOKEN>"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"9ffaeccd3b94437b7269134cb1d34eb4"
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Runtime:
      - '0.156963'
      X-Request-Id:
      - 01f728b9-3e77-4481-a094-67fd3bd0d351
      Date:
      - Tue, 31 Oct 2017 17:19:00 GMT
      X-Powered-By:
      - Phusion Passenger 5.1.8
      Server:
      - nginx + Phusion Passenger 5.1.8
    body:
      encoding: ASCII-8BIT
      string: '{"exercices":[{"ca":"648374448","dateFinExercice":"2016-12-31T00:00:00+01:00","date_fin_exercice_timestamp":1483138800},{"ca":"491463386","dateFinExercice":"2015-12-31T00:00:00+01:00","date_fin_exercice_timestamp":1451516400},{"ca":"473899061","dateFinExercice":"2014-12-31T00:00:00+01:00","date_fin_exercice_timestamp":1419980400}]}'
    http_version: 
  recorded_at: Tue, 31 Oct 2017 17:19:00 GMT
- request:
    method: get
    uri: "<APIE_BASE_URI_OLD>/v1/fntp/cartes_professionnelles/562077503?context=Ping&recipient=SGMAP&token=<APIE_TOKEN>"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"e6a32ffb507472f640111ee25875be1a"
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Runtime:
      - '1.383146'
      X-Request-Id:
      - 137a6aa2-ac7e-4364-a64c-d4b2718ae95a
      Date:
      - Tue, 31 Oct 2017 17:19:01 GMT
      X-Powered-By:
      - Phusion Passenger 5.1.8
      Server:
      - nginx + Phusion Passenger 5.1.8
    body:
      encoding: ASCII-8BIT
      string: '{"url":"https://storage.apientreprise.fr/siade/attestation%2Dc3e122f429aad077f89b07ba7b2eed56_fntp_carte_professionnelle.pdf"}'
    http_version: 
  recorded_at: Tue, 31 Oct 2017 17:19:01 GMT
- request:
    method: get
    uri: "<APIE_BASE_URI_OLD>/v1/infogreffe/extraits_rcs/418166096?context=Ping&recipient=SGMAP&token=<APIE_TOKEN>"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"5bd046b80a8ca39d9e1aca44dfc1e059"
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Runtime:
      - '0.607232'
      X-Request-Id:
      - de018384-3bc2-4173-bec1-cf2b9ea31dfc
      Date:
      - Tue, 31 Oct 2017 17:19:02 GMT
      X-Powered-By:
      - Phusion Passenger 5.1.8
      Server:
      - nginx + Phusion Passenger 5.1.8
    body:
      encoding: ASCII-8BIT
      string: '{"siren":"418166096","date_immatriculation":"1998-03-27","date_immatriculation_timestamp":890953200,"date_extrait":"30
        OCTOBRE 2017","observations":[{"date":"2000-02-23","date_timestamp":951260400,"numero":"12197","libelle":"
        LA SOCIETE NE CONSERVE AUCUNE ACTIVITE A SON ANCIEN SIEGE "}]}'
    http_version: 
  recorded_at: Tue, 31 Oct 2017 17:19:02 GMT
- request:
    method: get
    uri: "<APIE_BASE_URI_OLD>/v1/msa/cotisations/81104725700019?context=Ping&recipient=SGMAP&token=<APIE_TOKEN>"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"b6a2fcfb8e6e3654db97cc285871ac4f"
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Runtime:
      - '0.005639'
      X-Request-Id:
      - 2d2c5c79-da48-4968-a34a-9ec0f9877ea6
      Date:
      - Tue, 31 Oct 2017 17:19:02 GMT
      X-Powered-By:
      - Phusion Passenger 5.1.8
      Server:
      - nginx + Phusion Passenger 5.1.8
    body:
      encoding: ASCII-8BIT
      string: '{"analyse_en_cours":false,"a_jour":true,"date_validite":1483138800}'
    http_version: 
  recorded_at: Tue, 31 Oct 2017 17:19:02 GMT
- request:
    method: get
    uri: "<APIE_BASE_URI_OLD>/v1/opqibi/certificat/395301641?context=Ping&recipient=SGMAP&token=<APIE_TOKEN>"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"3414d29ac4b77096cf54d6b5f387bd23"
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Runtime:
      - '0.143324'
      X-Request-Id:
      - 8507321d-fb70-4e4f-93ba-066c7b2b2fe0
      Date:
      - Tue, 31 Oct 2017 17:19:02 GMT
      X-Powered-By:
      - Phusion Passenger 5.1.8
      Server:
      - nginx + Phusion Passenger 5.1.8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 31 Oct 2017 17:19:02 GMT
- request:
    method: get
    uri: "<APIE_BASE_URI_OLD>/v1/attestations_sociales/356000000?context=Ping&recipient=SGMAP&token=<APIE_TOKEN>&type_attestation=AVG_UR"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Fri, 05 Jan 2018 11:03:46 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Etag:
      - W/"08721b72162852779423e93eb3fedead"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - e6b1b229-eca4-4b45-ae00-700c2c51d839
      X-Runtime:
      - '21.199855'
    body:
      encoding: ASCII-8BIT
      string: '{"url":"https://storage.apientreprise.fr/siade_dev/1515150225-b822750ae14e45e83540a6184aa5b081d8b3a596-sociale.pdf"}'
    http_version: 
  recorded_at: Fri, 05 Jan 2018 11:03:46 GMT
recorded_with: VCR 3.0.3
